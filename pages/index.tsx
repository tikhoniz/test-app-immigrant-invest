import { useEffect, useState } from "react";
import Head from "next/head";
import { getCommits } from "@/helpers/api-commits";
import CommitCard from "@/components/CommitCard";
import Button from "@/components/Button";
import { ICommit } from "@/interfaces/card.interface";

export default function Home({ commitListJSON }: any) {
	const [commits, setCommits] = useState([]);
	const [isLoading, setLoading] = useState(false);

	const commitList = JSON.parse(commitListJSON);

	useEffect(() => {
		setCommits(commitList);
		// eslint-disable-next-line react-hooks/exhaustive-deps
	}, []);

	const refreshCommits = async () => {
		setLoading(true);

		const commitList = await getCommits();

		setCommits(commitList);
		setLoading(false);
	};

	return (
		<>
			<Head>
				<title>Test App for Immigrant Invest</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="flex items-center flex-col p-10 h-screen w-screen">
				<h2 className="text-4xl font-bold">
					In repository{" "}
					<span className="text-blue-600">{process.env.repo}</span>
				</h2>
				<h2 className="text-6xl font-bold">{commits.length} commits</h2>
				<Button onClickHandler={refreshCommits} disabled={isLoading}>
					{isLoading ? "Loading..." : "Refresh"}
				</Button>
				<ul className="list-none">
					{commits.map((commit: ICommit, i) => (
						<CommitCard key={i} commit={commit} />
					))}
				</ul>
			</main>
		</>
	);
}

export async function getStaticProps() {
	const res = await getCommits();

	const commitListJSON = JSON.stringify(res);

	return {
		props: { commitListJSON },
		revalidate: 60,
	};
}
